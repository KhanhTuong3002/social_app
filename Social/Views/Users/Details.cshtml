@model GetUserProfileVM

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet">

<main id="site__main" class="2xl:ml-[--w-side]  xl:ml-[--w-side-sm] p-2.5 h-[calc(100vh-var(--m-top))] mt-[--m-top]">

    <div class="max-w-[1065px] mx-auto max-lg:-m-2.5">
        <div class="bg-white shadow lg:rounded-b-xl lg:-mt-10">
            <div class="relative overflow-hidden w-full lg:h-8 h-8"></div>

            <div class="p-3 flex flex-row items-center">
                <div class="flex-shrink-0 mr-4">
                    <div class="relative lg:h-30 lg:w-28 w-32 h-32">
                        <div class="relative overflow-hidden rounded-full md:border-[6px] border-gray-100 shrink-0">
                            <img src="@(string.IsNullOrEmpty(Model.User.AvatarUrl)
            ? Url.Content("~/images/avatar/user.png")
            : Url.Content("~/" + Model.User.AvatarUrl))"
                                 class="w-full h-full object-cover" />
                        </div>
                    </div>

                </div>
                <div>
                    <h3 class="md:text-3xl ml-3 text-base font-bold text-black">@Model.User.FullName</h3>
                    <p class="mt-2 ml-3 text-gray-500">@Model.User.UserName</p>                 
                </div>
                <div class="ml-auto mt-10">
                    <button id="openChatBtn" class="z-50 text-blue-500 hover:text-blue-700 ml-4 mt-10 mr-2" title="Message">
                        <i class="fa-solid fa-message text-xl"></i>
                    </button>
                </div>
               
            </div>
        </div>
        <div class="flex 2xl:gap-12 gap-10 mt-8 max-lg:flex-col" id="js-oversized">
            <div class="flex-1 xl:space-y-6 space-y-3">
                @foreach(var post in Model.Posts)
                {
                    <partial name="Home/_Post"
                             model="post" 
                             view-data='new ViewDataDictionary(ViewData)
                                 {{"showAllComment",false}}' />
                }
            </div>
            <div class="lg:w-[400px]">
                <div class="lg:space-y-4 lg:pb-8 max-lg:grid sm:grid-cols-2 max-lg:gap-6"
                     uk-sticky="media: 1024; end: #js-oversized; offset: 80">
                    <div class="box p-5 px-6">
                        <div class="flex items-ce justify-between text-black">

                            <h3 class="font-bold text-lg">
                                Friends
                                <p class="text-sm text-gray-500 mt-1">
                                    @Model.Friends.Count @(@Model.Friends.Count <= 1 ? "friend" : "friends")
                                </p>
                            </h3>

                        </div>

                        <div class="grid grid-cols-3 gap-2 gap-y-5 text-center text-sm mt-4 mb-2">
                            @foreach (var friend in Model.Friends)
                            {
                                <div class="text-center">
                                    <img src="@Url.Content(string.IsNullOrEmpty(friend.AvatarUrl) ? "~/images/avatar/user.png" : "~/" + friend.AvatarUrl)"
                                         class="w-16 h-16 rounded-full object-cover mx-auto" />
                                    <div class="mt-2">@friend.FullName</div>
                                </div>
                            }                         
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--Chat box popup -->
    <div id="chatBox" style="z-index:10; position: fixed; bottom: 4px; right: 4px;"
         class="fixed bottom-4 right-4 bg-white border shadow-lg w-80 rounded-lg hidden z-50">
        <div class="flex items-center justify-between p-3 bg-blue-500 text-white rounded-t-lg">
            <span>@Model.User.FullName</span>
            <button id="closeChatBtn"><i class="fa fa-times"></i></button>
        </div>
        <div class="p-3 h-64 overflow-y-auto" id="chatMessages">
        </div>
        <div class="p-2 border-t">
            <input type="text" id="chatInput" placeholder="Nhập tin nhắn..." class="w-full border rounded px-2 py-1" />
        </div>
    </div>
</main>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.getElementById("openChatBtn")?.addEventListener("click", function () {
                document.getElementById("chatBox")?.classList.remove("hidden");
            });

            document.getElementById("closeChatBtn")?.addEventListener("click", function () {
                document.getElementById("chatBox")?.classList.add("hidden");
            });

            document.getElementById("chatInput")?.addEventListener("keydown", function (e) {
                if (e.key === "Enter" && this.value.trim() !== "") {
                    const message = this.value.trim();
                    const chatMessages = document.getElementById("chatMessages");

                    chatMessages.innerHTML += `<div class="text-right my-1">
                                    <span class="inline-block bg-blue-500 text-white px-2 py-1 rounded">${message}</span>
                                </div>`;

                    this.value = "";
                    chatMessages.scrollTop = chatMessages.scrollHeight;
                }
            });
        });
    </script>
